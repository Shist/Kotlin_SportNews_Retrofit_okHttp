apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin : 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "io.navendra.retrofitkotlindeferred"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        def tmdbApiKey = properties.getProperty("tmdb_api_key", "")

        debug {
            buildConfigField 'String', "TMDB_API_KEY", "\"$tmdbApiKey\""
            resValue 'string', "api_key", tmdbApiKey
        }

        release {
            buildConfigField 'String', "TMDB_API_KEY", "\"$tmdbApiKey\""
            resValue 'string', "api_key", tmdbApiKey

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // for View Binding
    buildFeatures {
        viewBinding true
    }

    kapt {
        correctErrorTypes = true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.1.0"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.4.0'

    def retrofit2_version = "2.6.0"
    def okhttp3_version = "3.12.0"
    def kotlinCoroutineVersion = "1.4.3"

    def lifecycle_version = "2.4.0-alpha02"

    // Lifecycles only (without ViewModel or LiveData)
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //RecycleView
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    //ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    //Gson
    implementation 'com.google.code.gson:gson:2.8.7'

    //Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    //Okhttp3
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    //Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutineVersion"

    //RecycleView
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    //ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    //Fragments
    implementation 'androidx.fragment:fragment-ktx:1.3.6'

    //Picasso for Image Loading
    implementation ('com.squareup.picasso:picasso:2.71828'){
        exclude group: "com.android.support"


    }

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // Room DB
    def room_version = "2.3.0"

    implementation("androidx.room:room-runtime:$room_version")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    // Work Manager
    def work_version = "2.6.0"

    // Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:$work_version")

    // Dagger Hilt
    def dagger_hilt_version = "2.38.1"
    implementation("com.google.dagger:hilt-android:$dagger_hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$dagger_hilt_version")

    // Dagger Hilt for UploadWorker
    implementation("androidx.hilt:hilt-work:1.0.0")
    kapt("androidx.hilt:hilt-compiler:1.0.0")
}